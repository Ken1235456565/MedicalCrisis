/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import Model.Enterprise.Enterprise;
import Model.Network.Network;
import Model.Network.NetworkDirectory; // Corrected import
import Model.Organization.Organization;
import Model.Role.Role;
import Model.User.UserAccount;
import Model.ConfigureASystem; // For initializing the system data
import Model.EcoSystem;
import Model.Organization.DonationManagementUnit;
import javax.swing.JPanel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField; // For handling password input

// Import specific role classes for type checking
import Model.Role.AdminRole;
import Model.Role.DeliveryStaffRole;
import Model.Role.DoctorRole;
import Model.Role.DonationCoordinatorRole;
import Model.Role.EmergencyDispatcherRole;
import Model.Role.EmergencyResponderRole;
import Model.Role.LogisticsManagerRole;
import Model.Role.NurseRole;
import Model.Role.PayrollStaffRole;
import Model.Role.ResourceAnalystRole;
import Model.Role.SupplychainManagerRole;
import Model.Role.VisitorRole;
import java.awt.CardLayout;
import ui.DeliveryStaff.DeliveryStaffWorkAreaPanel;
import ui.DonationCoordinator.DonationCoordinatorWorkAreaPanel;
import ui.EmergencyDispatcher.EmergencyDispatcherWorkAreaPanel;
import ui.EmergencyResponder.EmergencyResponderWorkAreaPanel;
import ui.EquipmentTechnician.EquipmentTechnicianWorkAreaPanel;
import ui.HospitalDoctor.HospitalDoctorWorkAreaPanel;
import ui.HospitalNurse.HospitalNurseWorkArea;
import ui.PayrollOfficer.PayrollOfficerWorkAreaPanel;
import ui.SupplychainManager.SupplyOfficerWorkAreaPanel;
import ui.VisitorDonor.VisitorDonorWorkAreaPanel;
import ui.admin.AdminWorkAreaPanel;
import ui.admin.ManageEnterprise;
import ui.admin.ManageNetwork;
import ui.admin.ManageOrganization;
import ui.admin.ManageUserAccounts;

/**
 *
 * @author tiankaining
 */
public class MainJFrame extends javax.swing.JFrame {

    private EcoSystem system;
    private JPanel userProcessContainer;

    /**
     * Creates new form MainJFrame
     */
public MainJFrame() {
    initComponents();  // NetBeans 自动生成
    this.setResizable(false);
    this.setSize(1400, 1000);

    system = ConfigureASystem.configure();

    // 设置 RightPanel 为 CardLayout（你已画好）
    RightPanel.setLayout(new CardLayout());
    this.userProcessContainer = RightPanel;

    // 设定为右侧组件
    splitPanel.setRightComponent(userProcessContainer);

    // LoginPanel
    ((CardLayout) userProcessContainer.getLayout()).show(userProcessContainer, "LoginPanel");
}



           
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPanel = new javax.swing.JSplitPane();
        LoginPanel = new javax.swing.JPanel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        loginBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        RightPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPanelLayout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(loginBtn)
                            .addComponent(logoutBtn))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(loginBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutBtn)
                .addContainerGap(424, Short.MAX_VALUE))
        );

        splitPanel.setLeftComponent(LoginPanel);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel1.setText("Medica Crisis Communication System");

        javax.swing.GroupLayout RightPanelLayout = new javax.swing.GroupLayout(RightPanel);
        RightPanel.setLayout(RightPanelLayout);
        RightPanelLayout.setHorizontalGroup(
            RightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RightPanelLayout.createSequentialGroup()
                .addContainerGap(257, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(236, 236, 236))
        );
        RightPanelLayout.setVerticalGroup(
            RightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightPanelLayout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addComponent(jLabel1)
                .addContainerGap(537, Short.MAX_VALUE))
        );

        splitPanel.setRightComponent(RightPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(splitPanel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPanel)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {
        userProcessContainer.removeAll();
        JPanel blankPanel = new JPanel(); // 或者一个欢迎页
        userProcessContainer.add("Blank", blankPanel);
        ((CardLayout) userProcessContainer.getLayout()).show(userProcessContainer, "Blank");
    }

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {
        String username = txtUsername.getText();
        String password = txtPassword.getText();

        UserAccount authenticatedUser = null;
        Organization currentOrg = null;
        Enterprise enterprise = null;

        // Try to authenticate the user across all organizations' user account directories
        for (Network network : system.getNetworkDirectory().getNetworkList()) {
            for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization org : ent.getOrganizations().getOrganizationList()) {
                    authenticatedUser = org.getUserAccountDirectory().authenticateUser(username, password);
                    if (authenticatedUser != null) {
                        currentOrg = org;
                        enterprise = ent; // ✅ 一旦找到 org，也记录它所在的 enterprise
                        break;
                    }
                }
                if (authenticatedUser != null) {
                    break;
                }
            }
            if (authenticatedUser != null) {
                break;
            }
        }

        // If not found in any organization, try the system's user account directory (for sysadmin)
        if (authenticatedUser == null) {
            authenticatedUser = system.getUserAccountDirectory().authenticateUser(username, password);
        }

        if (authenticatedUser == null) {
            JOptionPane.showMessageDialog(this, "Invalid credentials. Please check username and password.");
            return;
        }

        Role role = authenticatedUser.getRole();
        JPanel workAreaPanel = null;
        

        // Route to the appropriate work area based on the role
        if (role instanceof AdminRole) {
            workAreaPanel = new AdminWorkAreaPanel(userProcessContainer, system, authenticatedUser);
        } else if (role instanceof DoctorRole) {
            workAreaPanel = new HospitalDoctorWorkAreaPanel(userProcessContainer, currentOrg, authenticatedUser);
        } else if (role instanceof NurseRole) {
            workAreaPanel = new HospitalNurseWorkArea(userProcessContainer, currentOrg, authenticatedUser);
        } else if (role instanceof EmergencyDispatcherRole) {
            workAreaPanel = new EmergencyDispatcherWorkAreaPanel(userProcessContainer, currentOrg, authenticatedUser);
        } else if (role instanceof EmergencyResponderRole) {
            workAreaPanel = new EmergencyResponderWorkAreaPanel(userProcessContainer, currentOrg, authenticatedUser);
        } else if (role instanceof LogisticsManagerRole) {
            workAreaPanel = new SupplyOfficerWorkAreaPanel(userProcessContainer, currentOrg, authenticatedUser);
        } else if (role instanceof DeliveryStaffRole) {
            workAreaPanel = new DeliveryStaffWorkAreaPanel(userProcessContainer, currentOrg, authenticatedUser);
        } else if (role instanceof DonationCoordinatorRole) {
        workAreaPanel = new DonationCoordinatorWorkAreaPanel(userProcessContainer, system, authenticatedUser, (DonationManagementUnit) currentOrg);
        } else if (role instanceof PayrollStaffRole) {
            workAreaPanel = new PayrollOfficerWorkAreaPanel(userProcessContainer, enterprise, authenticatedUser);
        } else if (role instanceof ResourceAnalystRole) {
            // Assuming ResourceAnalyst also has a work area panel, replace with actual
            workAreaPanel = new PayrollOfficerWorkAreaPanel(userProcessContainer, enterprise, authenticatedUser); // Placeholder
        } else if (role instanceof SupplychainManagerRole) {
            // Assuming SupplychainManager also has a work area panel, replace with actual
            workAreaPanel = new SupplyOfficerWorkAreaPanel(userProcessContainer, currentOrg, authenticatedUser); // Placeholder
        } else if (role instanceof VisitorRole) {
            workAreaPanel = new VisitorDonorWorkAreaPanel(userProcessContainer, currentOrg, authenticatedUser);
        } else {
            JOptionPane.showMessageDialog(this, "Unrecognized role type.");
            return;
        }

        userProcessContainer.add("WorkArea", workAreaPanel);
        ((CardLayout) userProcessContainer.getLayout()).show(userProcessContainer, "WorkArea");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JPanel RightPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loginBtn;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JSplitPane splitPanel;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
